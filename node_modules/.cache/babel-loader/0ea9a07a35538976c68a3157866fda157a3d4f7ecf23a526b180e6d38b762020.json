{"ast":null,"code":"var _jsxFileName = \"/Users/adammenz/Developer/chords/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const chordTypes = [\"major\", \"minor\", \"augmented\", \"diminished\", \"dominant 7th\", \"major 7th\", \"minor 7th\", \"half-dimished 7th\", \"diminished 7th\"];\n  const notes = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\n  const modifier = [\"none\", \"sharp\", \"flat\"];\n  const randomElementFrom = arr => {\n    return arr[Math.random * arr.length];\n  };\n  const generateNote = () => {\n    const type = randomElementFrom(chordTypes);\n    const note = randomElementFrom(notes);\n    const modifier = randomElementFrom(modifier);\n    return note + \" \" + modifier + \" \" + type;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: generateNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"New chord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","chordTypes","notes","modifier","randomElementFrom","arr","Math","random","length","generateNote","type","note"],"sources":["/Users/adammenz/Developer/chords/src/App.js"],"sourcesContent":["function App() {\n  const chordTypes = [\n    \"major\",\n    \"minor\",\n    \"augmented\",\n    \"diminished\",\n    \"dominant 7th\",\n    \"major 7th\",\n    \"minor 7th\",\n    \"half-dimished 7th\",\n    \"diminished 7th\",\n  ];\n  const notes = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\n  const modifier = [\"none\", \"sharp\", \"flat\"];\n\n  const randomElementFrom = (arr) => {\n    return arr[Math.random * arr.length];\n  };\n\n  const generateNote = () => {\n    const type = randomElementFrom(chordTypes);\n    const note = randomElementFrom(notes);\n    const modifier = randomElementFrom(modifier);\n    return note + \" \" + modifier + \" \" + type;\n  };\n\n  return (\n    <div>\n      <div>{generateNote()}</div>\n      <button>New chord</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,GAAG,GAAG;EACb,MAAMC,UAAU,GAAG,CACjB,OAAO,EACP,OAAO,EACP,WAAW,EACX,YAAY,EACZ,cAAc,EACd,WAAW,EACX,WAAW,EACX,mBAAmB,EACnB,gBAAgB,CACjB;EACD,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACjD,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;EAE1C,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;IACjC,OAAOA,GAAG,CAACC,IAAI,CAACC,MAAM,GAAGF,GAAG,CAACG,MAAM,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzB,MAAMC,IAAI,GAAGN,iBAAiB,CAACH,UAAU,CAAC;IAC1C,MAAMU,IAAI,GAAGP,iBAAiB,CAACF,KAAK,CAAC;IACrC,MAAMC,QAAQ,GAAGC,iBAAiB,CAACD,QAAQ,CAAC;IAC5C,OAAOQ,IAAI,GAAG,GAAG,GAAGR,QAAQ,GAAG,GAAG,GAAGO,IAAI;EAC3C,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAMD,YAAY;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eAC3B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B;EAAA;IAAA;IAAA;IAAA;EAAA,QACtB;AAEV;AAAC,KAhCQT,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
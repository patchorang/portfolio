{"ast":null,"code":"var _jsxFileName = \"/Users/adammenz/Developer/chords/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Toggle from \"./components/Toggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TYPES = [\"\", \"-\", \"aug\", \"dim\", \"⁷\", \"maj⁷\", \"-⁷\", \"ø⁷\", \"o⁷\"];\nconst NOTES = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\nconst MODIFIERS = [\"\", \"#\", \"♭\"];\nfunction App() {\n  _s();\n  const randomElementFrom = arr => {\n    return arr[Math.floor(Math.random() * arr.length)];\n  };\n  const [currentTypes, setCurrentTypes] = useState(TYPES.reduce((acc, curr) => (acc[curr] = true, acc), {}));\n  const [type, setType] = useState(randomElementFrom(TYPES));\n  const [note, setNote] = useState(randomElementFrom(NOTES));\n  const [modifier, setModifier] = useState(randomElementFrom(MODIFIERS));\n  const generateNote = () => {\n    console.log(currentTypes);\n    // const currentTypesArray = Object.entries(currentTypes);\n    // console.log(currentTypesArray);\n    // const currentEnabledTypes = currentTypesArray.filter(\n    //   (type) => currentTypes[type]\n    // );\n    setNote(randomElementFrom(NOTES));\n    setType(randomElementFrom(currentEnabledTypes));\n    setModifier(randomElementFrom(MODIFIERS));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container m-auto grid max-w-2xl w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-slate-50 p-4 my-4 rounded-md place-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-5xl mb-4 place-items-center\",\n        children: [note, modifier, \" \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        onClick: generateNote,\n        children: \"Next chord\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-auto grid grid-cols-2\",\n      children: TYPES.map(type => {\n        return /*#__PURE__*/_jsxDEV(Toggle, {\n          isOn: currentTypes[type],\n          handleToggle: () => {\n            setCurrentTypes({\n              ...currentTypes,\n              [type]: !currentTypes[type]\n            });\n          },\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qbgRt9rsOFRNEULRJt7q8wikEhY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Toggle","TYPES","NOTES","MODIFIERS","App","randomElementFrom","arr","Math","floor","random","length","currentTypes","setCurrentTypes","reduce","acc","curr","type","setType","note","setNote","modifier","setModifier","generateNote","console","log","currentEnabledTypes","map"],"sources":["/Users/adammenz/Developer/chords/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Toggle from \"./components/Toggle\";\n\nconst TYPES = [\"\", \"-\", \"aug\", \"dim\", \"⁷\", \"maj⁷\", \"-⁷\", \"ø⁷\", \"o⁷\"];\nconst NOTES = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\nconst MODIFIERS = [\"\", \"#\", \"♭\"];\n\nfunction App() {\n  const randomElementFrom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n  };\n\n  const [currentTypes, setCurrentTypes] = useState(\n    TYPES.reduce((acc, curr) => ((acc[curr] = true), acc), {})\n  );\n\n  const [type, setType] = useState(randomElementFrom(TYPES));\n  const [note, setNote] = useState(randomElementFrom(NOTES));\n  const [modifier, setModifier] = useState(randomElementFrom(MODIFIERS));\n\n  const generateNote = () => {\n    console.log(currentTypes);\n    // const currentTypesArray = Object.entries(currentTypes);\n    // console.log(currentTypesArray);\n    // const currentEnabledTypes = currentTypesArray.filter(\n    //   (type) => currentTypes[type]\n    // );\n    setNote(randomElementFrom(NOTES));\n    setType(randomElementFrom(currentEnabledTypes));\n    setModifier(randomElementFrom(MODIFIERS));\n  };\n\n  return (\n    <div className=\"container m-auto grid max-w-2xl w-full\">\n      <div className=\"bg-slate-50 p-4 my-4 rounded-md place-items-center\">\n        <div className=\"text-5xl mb-4 place-items-center\">\n          {note}\n          {modifier} {type}\n        </div>\n        <button\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          onClick={generateNote}\n        >\n          Next chord\n        </button>\n      </div>\n      <div className=\"container m-auto grid grid-cols-2\">\n        {TYPES.map((type) => {\n          return (\n            <Toggle\n              key={type}\n              isOn={currentTypes[type]}\n              handleToggle={() => {\n                setCurrentTypes({\n                  ...currentTypes,\n                  [type]: !currentTypes[type],\n                });\n              }}\n            >\n              {type}\n            </Toggle>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,MAAMC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AACpE,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACjD,MAAMC,SAAS,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAEhC,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;IACjC,OAAOA,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC;EACpD,CAAC;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAC9CE,KAAK,CAACY,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,MAAOD,GAAG,CAACC,IAAI,CAAC,GAAG,IAAI,EAAGD,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAC3D;EAED,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAACM,iBAAiB,CAACJ,KAAK,CAAC,CAAC;EAC1D,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAACM,iBAAiB,CAACH,KAAK,CAAC,CAAC;EAC1D,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACM,iBAAiB,CAACF,SAAS,CAAC,CAAC;EAEtE,MAAMmB,YAAY,GAAG,MAAM;IACzBC,OAAO,CAACC,GAAG,CAACb,YAAY,CAAC;IACzB;IACA;IACA;IACA;IACA;IACAQ,OAAO,CAACd,iBAAiB,CAACH,KAAK,CAAC,CAAC;IACjCe,OAAO,CAACZ,iBAAiB,CAACoB,mBAAmB,CAAC,CAAC;IAC/CJ,WAAW,CAAChB,iBAAiB,CAACF,SAAS,CAAC,CAAC;EAC3C,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,wCAAwC;IAAA,wBACrD;MAAK,SAAS,EAAC,oDAAoD;MAAA,wBACjE;QAAK,SAAS,EAAC,kCAAkC;QAAA,WAC9Ce,IAAI,EACJE,QAAQ,OAAGJ,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACZ,eACN;QACE,SAAS,EAAC,sEAAsE;QAChF,OAAO,EAAEM,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGf;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAK,SAAS,EAAC,mCAAmC;MAAA,UAC/CrB,KAAK,CAACyB,GAAG,CAAEV,IAAI,IAAK;QACnB,oBACE,QAAC,MAAM;UAEL,IAAI,EAAEL,YAAY,CAACK,IAAI,CAAE;UACzB,YAAY,EAAE,MAAM;YAClBJ,eAAe,CAAC;cACd,GAAGD,YAAY;cACf,CAACK,IAAI,GAAG,CAACL,YAAY,CAACK,IAAI;YAC5B,CAAC,CAAC;UACJ,CAAE;UAAA,UAEDA;QAAI,GATAA,IAAI;UAAA;UAAA;UAAA;QAAA,QAUF;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA3DQZ,GAAG;AAAA,KAAHA,GAAG;AA6DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}